"use client";

import React, { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import {
  FaSearch,
  FaCalendarCheck,
  FaBell,
  FaServer,
  FaChartPie,
  FaTasks,
  FaUsers,
  FaQuestionCircle,
  FaCloudSun,
  FaSignOutAlt,
} from "react-icons/fa";

// Définir les rôles possibles
const ROLES = {
  API_USER: "apiUser",
  BUSINESS_ANALYST: "ba",
  DEVELOPER: "developer",
  ADMIN: "admin",
};

const rolePermissions = {
  [ROLES.API_USER]: [
    { icon: <FaSearch size={20} />, label: "Search", path: "/view/incidents-details" },
    { icon: <FaTasks size={20} />, label: "Incidents", path: "/view/incident-list" },
    { icon: <FaCalendarCheck size={20} />, label: "Follow Status", path: "/view/status-tracking" },
    { icon: <FaBell size={20} />, label: "Notifications", path: "/view/notification-page" },
    { icon: <FaCloudSun size={20} />, label: "API Weather", path: "/view/api-meteo" },
  ],
  [ROLES.BUSINESS_ANALYST]: [
    { icon: <FaSearch size={20} />, label: "Search", path: "/view/incidents-details" },
    { icon: <FaTasks size={20} />, label: "Incidents", path: "/view/incident-list" },
    { icon: <FaServer size={20} />, label: "Assign Incident", path: "/view/assign-incident" },
    { icon: <FaCalendarCheck size={20} />, label: "Follow Status", path: "/view/status-tracking" },
    { icon: <FaBell size={20} />, label: "Notifications", path: "/view/notification-page" },
    { icon: <FaUsers size={20} />, label: "Employees", path: "/view/employees-dashboard" },
  ],
  [ROLES.DEVELOPER]: [
    { icon: <FaTasks size={20} />, label: "Incidents", path: "/view/incident-list" },
    { icon: <FaCalendarCheck size={20} />, label: "Take Charge", path: "/view/take-charge" },
    { icon: <FaServer size={20} />, label: "Update Status", path: "/view/update-status" },
    { icon: <FaBell size={20} />, label: "Notifications", path: "/view/notification-page" },
  ],
  [ROLES.ADMIN]: [
    { icon: <FaSearch size={20} />, label: "Search", path: "/view/incidents-details" },
    { icon: <FaTasks size={20} />, label: "Incidents", path: "/view/incident-list" },
    { icon: <FaUsers size={20} />, label: "Manage Roles", path: "/view/manage-roles" },
    { icon: <FaChartPie size={20} />, label: "Dashboard", path: "/view/dashboards" },
    { icon: <FaBell size={20} />, label: "Notifications", path: "/view/notification-page" },
  ],
};

export default function Sidebar() {
  const router = useRouter();
  const [userRole, setUserRole] = useState<string | null>(null);

  // Simuler la récupération du rôle de l'utilisateur
  useEffect(() => {
    const role = localStorage.getItem("userRole") || ROLES.API_USER; // Par défaut API_USER
    setUserRole(role);
  }, []);

  const handleLogout = () => {
    localStorage.removeItem("userRole");
    router.push("/login");
  };

  const handleNavigation = (path: string) => {
    router.push(path);
  };

  // Vérification que userRole existe et que les permissions sont définies
  const permissions = userRole ? rolePermissions[userRole] : [];

  return (
    <div className="bg-red-600 fixed top-0 left-0 z-10 text-white h-screen w-48 flex flex-col justify-between p-4">
      {/* Menu icons */}
      <nav className="flex flex-col space-y-6 mt-24">
        {permissions.map((item, index) => (
          <div
            key={index}
            onClick={() => handleNavigation(item.path)}
            className="flex items-center space-x-3 text-white cursor-pointer hover:scale-105 transition-all"
          >
            <div>{item.icon}</div>
            <span className="text-[16px]">{item.label}</span>
          </div>
        ))}
      </nav>

      {/* Logout button */}
      <div className="mt-6">
        <div
          onClick={handleLogout}
          className="flex items-center space-x-3 text-white cursor-pointer hover:scale-105 transition-all"
        >
          <div><FaSignOutAlt size={20} /></div>
          <span className="text-[16px]">Logout</span>
        </div>
      </div>
    </div>
  );
}
