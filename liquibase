package com.example.demo.Controller;

import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.mvc.method.annotation.SseEmitter;

import java.io.IOException;
import java.util.List;
import java.util.concurrent.CopyOnWriteArrayList;

@RestController
public class NewsController{

    public List<SseEmitter> emitters=new CopyOnWriteArrayList<>();
    @CrossOrigin
    @RequestMapping(value="/subscribe",consumes = MediaType.ALL_VALUE)
    public SseEmitter subscribe() throws IOException {
        SseEmitter sseEmitter=new SseEmitter(Long.MAX_VALUE);
        sseEmitter.send(SseEmitter.event().name("INIT"));
      emitters.add(sseEmitter);
        return sseEmitter;

    }
    @PostMapping(value="/dispatchEvent")
    public void dispatchEventToClient(@RequestParam String freshNews)  {
      for(SseEmitter emitter:emitters){
          try {
              emitter.send(SseEmitter.event().name("latestNews").data(freshNews));
          } catch (IOException e) {
              emitters.remove(emitter);
          }
      }
    }


}


"use client";

import React, { useEffect, useState } from "react";

const NewsFeed = () => {
  const [news, setNews] = useState([]);

  useEffect(() => {
    const eventSource = new EventSource("http://localhost:8080/subscribe");

    eventSource.onopen = () => {
      console.log("Connexion SSE Ã©tablie");
    };

    eventSource.addEventListener("INIT", () => {
      console.log("Connexion initialisÃ©e par le serveur");
    });

    eventSource.addEventListener("latestNews", (event) => {
      console.log("Nouvelle donnÃ©e reÃ§ue :", event.data);
      setNews((prev) => [...prev, event.data]);
    });

    eventSource.onerror = (err) => {
      console.error("Erreur SSE", err);
      eventSource.close();
    };

    return () => {
      eventSource.close();
    };
  }, []);

  return (
    <div style={{ padding: 20 }}>
      <h2>ðŸ“° ActualitÃ©s en direct</h2>
      <ul>
        {news.map((item, index) => (
          <li key={index}>ðŸ“¢ {item}</li>
        ))}
      </ul>
    </div>
  );
};

export default NewsFeed;
