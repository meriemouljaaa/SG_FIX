import org.springframework.data.jpa.repository.JpaRepository;
import java.util.List;

public interface IncidentRepository extends JpaRepository<IncidentEntity, Integer> {
    
    List<IncidentEntity> findByTitreContainingIgnoreCaseOrDescriptionContainingIgnoreCase(String titre, String description);
}
import java.util.Optional;
import java.util.List;

@Service
public class IncidentService {
    @Autowired
    private IncidentRepository incidentRepository;

    // Détail d'un incident par id
    public IncidentEntity getIncidentById(int id) {
        return incidentRepository.findById(id)
                .orElseThrow(() -> new RuntimeException("Incident non trouvé avec id: " + id));
    }

    // Recherche par mot clé (titre ou description)
    public List<IncidentEntity> searchIncidentsByKeyword(String keyword) {
        return incidentRepository.findByTitreContainingIgnoreCaseOrDescriptionContainingIgnoreCase(keyword, keyword);
    }

    // Changer statut d'un incident
    public IncidentEntity updateIncidentStatus(int id, StatutIncident nouveauStatut) {
        IncidentEntity incident = incidentRepository.findById(id)
                .orElseThrow(() -> new RuntimeException("Incident non trouvé avec id: " + id));
        incident.setStatut(nouveauStatut);

        if (nouveauStatut == StatutIncident.RESOLU) {
            incident.setDateResolution(new Date());
        }

        return incidentRepository.save(incident);
    }
}

import org.springframework.web.bind.annotation.*;
import java.util.List;

@RestController
@RequestMapping("/incidents")
public class IncidentController {

    @Autowired
    private IncidentService incidentService;

    // 1. Afficher détail d'un incident
    @GetMapping("/{id}")
    public IncidentEntity getIncidentById(@PathVariable int id) {
        return incidentService.getIncidentById(id);
    }

    // 2. Recherche par mot clé
    @GetMapping("/search")
    public List<IncidentEntity> searchIncidents(@RequestParam String keyword) {
        return incidentService.searchIncidentsByKeyword(keyword);
    }

    // 3. Changer statut d'un incident
    @PutMapping("/{id}/statut")
    public IncidentEntity updateIncidentStatus(@PathVariable int id, @RequestParam StatutIncident statut) {
        return incidentService.updateIncidentStatus(id, statut);
    }
}

