public byte[] generateStyledPdf(GenerateReportIncidentResponse response) throws IOException {
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    PdfWriter writer = new PdfWriter(baos);
    PdfDocument pdf = new PdfDocument(writer);
    Document doc = new Document(pdf, PageSize.A4);
    doc.setMargins(40, 40, 40, 40);

    // Polices et couleurs
    PdfFont font = PdfFontFactory.createFont(StandardFonts.HELVETICA);
    PdfFont bold = PdfFontFactory.createFont(StandardFonts.HELVETICA_BOLD);

    Color primaryColor = ColorConstants.BLUE;
    Color gray = new DeviceRgb(240, 240, 240);

    // Logo
    String logoPath = "src/main/resources/static/logo.png";
    ImageData imageData = ImageDataFactory.create(logoPath);
    Image logo = new Image(imageData).scaleToFit(100, 100).setHorizontalAlignment(HorizontalAlignment.RIGHT);
    doc.add(logo);

    // Titre
    doc.add(new Paragraph("Rapport d‚ÄôIncident IT")
        .setFont(bold)
        .setFontSize(22)
        .setFontColor(primaryColor)
        .setTextAlignment(TextAlignment.CENTER)
        .setMarginBottom(20));

    // Section 1 - D√©tails
    Table detailTable = new Table(3);
    detailTable.setWidth(UnitValue.createPercentValue(100));
    detailTable.addCell(new Cell().add(new Paragraph("Titre : " + response.getTitre())).setFont(bold));
    detailTable.addCell(new Cell().add(new Paragraph("Gravit√© : " + response.getGravite())));
    detailTable.addCell(new Cell().add(new Paragraph("Priorit√© : " + response.getPriorite())));
    doc.add(detailTable);

    // Section 2 - Client / Co-dev
    doc.add(new Paragraph("üë§ Informations Client")
        .setFont(bold)
        .setFontSize(14)
        .setFontColor(primaryColor)
        .setMarginTop(15));
    doc.add(new Paragraph("Nom : " + response.getClientName()));
    doc.add(new Paragraph("Email : " + response.getClientEmail()));

    doc.add(new Paragraph("ü§ù Co-d√©veloppeur")
        .setFont(bold)
        .setFontSize(14)
        .setFontColor(primaryColor)
        .setMarginTop(10));
    doc.add(new Paragraph("Nom : " + response.getCoDevName()));
    doc.add(new Paragraph("Email : " + response.getCoDevEmail()));

    // Section 3 - Description
    doc.add(new Paragraph("üìù Description")
        .setFont(bold)
        .setFontSize(14)
        .setFontColor(primaryColor)
        .setMarginTop(15));
    doc.add(new Paragraph(response.getDescription()));

    // Section 4 - R√©solution
    doc.add(new Paragraph("üîß Actions et R√©solution")
        .setFont(bold)
        .setFontSize(14)
        .setFontColor(primaryColor)
        .setMarginTop(15));
    doc.add(new Paragraph(response.getResolution()));

    // Section 5 - Image (s'il y a une capture ou preuve)
    if (response.getBase64Image() != null) {
        byte[] imageBytes = Base64.getDecoder().decode(response.getBase64Image());
        ImageData screenshot = ImageDataFactory.create(imageBytes);
        Image img = new Image(screenshot).scaleToFit(400, 300).setMarginTop(10);
        doc.add(img);
    }

    // Footer
    doc.add(new Paragraph("‚úçÔ∏è Rapport g√©n√©r√© par : Meriem OULJA ‚Äì " + LocalDate.now())
        .setFontSize(10)
        .setFontColor(ColorConstants.GRAY)
        .setTextAlignment(TextAlignment.RIGHT)
        .setMarginTop(30));

    doc.close();
    return baos.toByteArray();
}
@RestController
@RequestMapping("/api/reports")
public class IncidentReportController {

    private final PdfReportService pdfReportService;

    public IncidentReportController(PdfReportService pdfReportService) {
        this.pdfReportService = pdfReportService;
    }

    @PostMapping(value = "/incident", produces = MediaType.APPLICATION_PDF_VALUE)
    public ResponseEntity<byte[]> generateIncidentReport(@RequestBody GenerateReportIncidentResponse response) {
        try {
            byte[] pdfBytes = pdfReportService.generateStyledPdf(response);

            HttpHeaders headers = new HttpHeaders();
            headers.setContentType(MediaType.APPLICATION_PDF);
            headers.setContentDisposition(ContentDisposition.builder("attachment")
                    .filename("rapport_incident_" + LocalDate.now() + ".pdf")
                    .build());

            return ResponseEntity.ok()
                    .headers(headers)
                    .body(pdfBytes);

        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                    .body(null);
        }
    }
}
