"use client";

import { useState, useRef, useEffect } from "react";
import { Bell, LogOut } from "lucide-react";
import Image from "next/image";
import { useRouter } from "next/navigation";
import Notifications from "../notification-user/notificationuser";

const HeaderBar = () => {
  const router = useRouter();
  const [openUserMenu, setOpenUserMenu] = useState(false);
  const [openNotifMenu, setOpenNotifMenu] = useState(false);
  const menuRef = useRef<HTMLDivElement>(null);
  const hasNotification = true;

  const user = {
    name: "Omar Bari",
    email: "omar.bari@email.com",
    role: "Admin",
  };

  const getInitials = (name: string): string => {
    return name
      .split(" ")
      .map((word: string) => word[0])
      .join("")
      .slice(0, 2)
      .toUpperCase();
  };

  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {
        setOpenUserMenu(false);
        setOpenNotifMenu(false);
      }
    };
    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);

  return (
    <header className="bg-white shadow-md px-6 py-3 flex items-center justify-between text-black relative w-full">
      <div className="flex-1" />
      <div className="flex justify-center flex-1">
        <Image
          src="/images/logoImage.png"
          alt="Logo SG-FIX"
          width={220}
          height={70}
          priority
        />
      </div>

      <div className="flex items-center gap-5 relative" ref={menuRef}>
        {/* ðŸ‘¤ User Menu (dÃ©placÃ© Ã  gauche) */}
        <div className="relative">
          <div className="flex flex-col items-center cursor-pointer">
            <div
              className="w-10 h-10 bg-gray-300 rounded-full flex items-center justify-center text-base font-semibold hover:bg-gray-400 transition"
              onClick={() => setOpenUserMenu((v) => !v)}
            >
              {getInitials(user.name)}
            </div>
            <span className="text-sm font-medium text-gray-700 mt-1">{user.name}</span>
          </div>

          {openUserMenu && (
            <div className="absolute right-0 mt-4 w-56 bg-white rounded-xl shadow-xl border border-gray-100 z-50 animate-fade-in-down py-3 px-4">
              <div className="flex flex-col items-center pb-3 border-b border-gray-200">
                <div className="w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center text-white text-xl font-bold mb-1">
                  {getInitials(user.name)}
                </div>
                <div className="font-semibold text-lg">{user.name}</div>
                <div className="text-sm text-gray-500">{user.email}</div>
                <div className="text-xs text-gray-400">{user.role}</div>
              </div>
              <button
                className="flex items-center gap-2 mt-3 px-2 py-2 w-full text-left text-red-500 hover:bg-gray-100 rounded transition"
                onClick={() => {
                  setOpenUserMenu(false);
                  router.push("/");
                }}
              >
                <LogOut className="w-5 h-5" /> Se dÃ©connecter
              </button>
            </div>
          )}
        </div>

        {/* ðŸ”” Notifications (dÃ©placÃ© Ã  droite) */}
        <div className="relative">
          <div
            className="relative cursor-pointer"
            onClick={() => setOpenNotifMenu((v) => !v)}
          >
            <Bell className="h-8 w-8 text-black" />
            {hasNotification && (
              <span className="absolute -top-1 -right-1 h-3 w-3 rounded-full bg-red-500 border-2 border-white" />
            )}
          </div>

          {openNotifMenu && (
            <div className="absolute right-0 mt-3 z-50 w-screen max-w-md ml-auto">
              <Notifications />
            </div>
          )}
        </div>
      </div>

      <style jsx>{`
        .animate-fade-in-down {
          animation: fadeInDown 0.17s cubic-bezier(.39,.575,.565,1) both;
        }
        @keyframes fadeInDown {
          from { opacity: 0; transform: translateY(-10px) scale(0.98); }
          to { opacity: 1; transform: translateY(0) scale(1); }
        }
      `}</style>
    </header>
  );
};

export default HeaderBar;
